{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  msg: \"\",\n  user: \"\",\n  token: \"\",\n  loading: false,\n  error: \"\"\n};\nexport const signUpUser = createAsyncThunk(\"signupuser\", async () => {\n  try {\n    const res = await fetch(\"ddddddddddddddddddddd\", {\n      method: \"post\",\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    // Gérer les erreurs de la requête fetch ici\n    throw error;\n  }\n});\nexport const signInUser = createAsyncThunk(\"signinuser\", async () => {\n  try {\n    const res = await fetch(\"http://104.215.249.5:5000/api/login\", {\n      method: \"post\",\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    // Gérer les erreurs de la requête fetch ici\n    throw error;\n  }\n});\nconst authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    addToken: (state, action) => {\n      state.token = localStorage.getItem(\"token\");\n    },\n    addUser: (state, action) => {\n      state.token = localStorage.getItem(\"user\");\n    },\n    logout: (state, action) => {\n      state.token = null;\n      localStorage.clear();\n    }\n  },\n  extraReducers: {\n    [signInUser.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [signInUser.fulfilled]: (state, {\n      payload: {\n        error,\n        msg,\n        token,\n        user\n      }\n    }) => {\n      state.loading = false;\n      if (error) {\n        state.error = error;\n      } else {\n        state.msg = msg;\n        state.token = token;\n        state.user = user;\n        localStorage.setItem('msg', msg);\n        localStorage.setItem('user', JSON.stringify(user));\n        localStorage.setItem('token', token);\n      }\n    },\n    [signInUser.rejected]: (state, action) => {\n      state.loading = true;\n    },\n    /**************************************/\n    [signUpUser.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [signUpUser.fulfilled]: (state, {\n      payload: {\n        error,\n        msg\n      }\n    }) => {\n      state.loading = false;\n      if (error) {\n        state.loading = error;\n      } else {\n        state.msg = msg;\n      }\n    },\n    [signUpUser.rejected]: (state, action) => {\n      state.loading = true;\n    }\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","msg","user","token","loading","error","signUpUser","res","fetch","method","headers","body","JSON","stringify","data","json","signInUser","authSlice","name","reducers","addToken","state","action","localStorage","getItem","addUser","logout","clear","extraReducers","pending","fulfilled","payload","setItem","rejected","reducer"],"sources":["D:/bin_edk (hayat and oumaima)/client/src/redux/slice/autoSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    msg: \"\",\r\n    user: \"\",\r\n    token: \"\",\r\n    loading: false,\r\n    error: \"\"\r\n}\r\n\r\nexport const signUpUser = createAsyncThunk(\"signupuser\", async () => {\r\n    try {\r\n        const res = await fetch(\"ddddddddddddddddddddd\", {\r\n            method: \"post\",\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n        const data = await res.json();\r\n        return data;\r\n    } catch (error) {\r\n        // Gérer les erreurs de la requête fetch ici\r\n        throw error;\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\nexport const signInUser = createAsyncThunk(\"signinuser\", async () => {\r\n    try {\r\n        const res = await fetch(\"http://104.215.249.5:5000/api/login\", {\r\n            method: \"post\",\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n        const data = await res.json();\r\n        return data;\r\n    } catch (error) {\r\n        // Gérer les erreurs de la requête fetch ici\r\n        throw error;\r\n    }\r\n});\r\n\r\nconst authSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n            addToken:(state,action)=>{\r\n                state.token=localStorage.getItem(\"token\")\r\n            },\r\n            addUser:(state,action)=>{\r\n                state.token=localStorage.getItem(\"user\")\r\n            },\r\n            logout:(state,action)=>{\r\n                state.token = null ;\r\n                localStorage.clear();\r\n            }\r\n    },\r\n    extraReducers:{\r\n        [signInUser.pending]: (state,action)=>{\r\n            state.loading = true\r\n        },\r\n        [signInUser.fulfilled]: (state,{payload:{error,msg,token,user}})=>{\r\n            state.loading = false;\r\n            if(error){\r\n                state.error = error;\r\n            }else{\r\n                state.msg = msg;\r\n                state.token = token;\r\n                state.user = user;\r\n\r\n                localStorage.setItem('msg',msg)\r\n                localStorage.setItem('user',JSON.stringify(user))\r\n                localStorage.setItem('token',token)\r\n            }\r\n        },\r\n        [signInUser.rejected]: (state,action)=>{\r\n            state.loading = true\r\n        },\r\n        /**************************************/ \r\n        [signUpUser.pending]: (state,action)=>{\r\n            state.loading = true\r\n        },\r\n        [signUpUser.fulfilled]: (state,{payload:{error,msg}})=>{\r\n            state.loading = false;\r\n            if(error){\r\n                state.loading = error\r\n            }else{\r\n                state.msg = msg\r\n            }\r\n        },\r\n        [signUpUser.rejected]: (state,action)=>{\r\n            state.loading = true\r\n        }\r\n    }    \r\n        \r\n});\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,MAAMC,YAAY,GAAG;EACjBC,GAAG,EAAE,EAAE;EACPC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGP,gBAAgB,CAAC,YAAY,EAAE,YAAY;EACjE,IAAI;IACA,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,uBAAuB,EAAE;MAC7CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACF,IAAI;IAC7B,CAAC,CAAC;IACF,MAAMG,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAC7B,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOT,KAAK,EAAE;IACZ;IACA,MAAMA,KAAK;EACf;AACJ,CAAC,CAAC;AAKF,OAAO,MAAMW,UAAU,GAAGjB,gBAAgB,CAAC,YAAY,EAAE,YAAY;EACjE,IAAI;IACA,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACF,IAAI;IAC7B,CAAC,CAAC;IACF,MAAMG,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAC7B,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOT,KAAK,EAAE;IACZ;IACA,MAAMA,KAAK;EACf;AACJ,CAAC,CAAC;AAEF,MAAMY,SAAS,GAAGnB,WAAW,CAAC;EAC1BoB,IAAI,EAAE,MAAM;EACZlB,YAAY;EACZmB,QAAQ,EAAE;IACFC,QAAQ,EAACA,CAACC,KAAK,EAACC,MAAM,KAAG;MACrBD,KAAK,CAAClB,KAAK,GAACoB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC7C,CAAC;IACDC,OAAO,EAACA,CAACJ,KAAK,EAACC,MAAM,KAAG;MACpBD,KAAK,CAAClB,KAAK,GAACoB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC5C,CAAC;IACDE,MAAM,EAACA,CAACL,KAAK,EAACC,MAAM,KAAG;MACnBD,KAAK,CAAClB,KAAK,GAAG,IAAI;MAClBoB,YAAY,CAACI,KAAK,CAAC,CAAC;IACxB;EACR,CAAC;EACDC,aAAa,EAAC;IACV,CAACZ,UAAU,CAACa,OAAO,GAAG,CAACR,KAAK,EAACC,MAAM,KAAG;MAClCD,KAAK,CAACjB,OAAO,GAAG,IAAI;IACxB,CAAC;IACD,CAACY,UAAU,CAACc,SAAS,GAAG,CAACT,KAAK,EAAC;MAACU,OAAO,EAAC;QAAC1B,KAAK;QAACJ,GAAG;QAACE,KAAK;QAACD;MAAI;IAAC,CAAC,KAAG;MAC9DmB,KAAK,CAACjB,OAAO,GAAG,KAAK;MACrB,IAAGC,KAAK,EAAC;QACLgB,KAAK,CAAChB,KAAK,GAAGA,KAAK;MACvB,CAAC,MAAI;QACDgB,KAAK,CAACpB,GAAG,GAAGA,GAAG;QACfoB,KAAK,CAAClB,KAAK,GAAGA,KAAK;QACnBkB,KAAK,CAACnB,IAAI,GAAGA,IAAI;QAEjBqB,YAAY,CAACS,OAAO,CAAC,KAAK,EAAC/B,GAAG,CAAC;QAC/BsB,YAAY,CAACS,OAAO,CAAC,MAAM,EAACpB,IAAI,CAACC,SAAS,CAACX,IAAI,CAAC,CAAC;QACjDqB,YAAY,CAACS,OAAO,CAAC,OAAO,EAAC7B,KAAK,CAAC;MACvC;IACJ,CAAC;IACD,CAACa,UAAU,CAACiB,QAAQ,GAAG,CAACZ,KAAK,EAACC,MAAM,KAAG;MACnCD,KAAK,CAACjB,OAAO,GAAG,IAAI;IACxB,CAAC;IACD;IACA,CAACE,UAAU,CAACuB,OAAO,GAAG,CAACR,KAAK,EAACC,MAAM,KAAG;MAClCD,KAAK,CAACjB,OAAO,GAAG,IAAI;IACxB,CAAC;IACD,CAACE,UAAU,CAACwB,SAAS,GAAG,CAACT,KAAK,EAAC;MAACU,OAAO,EAAC;QAAC1B,KAAK;QAACJ;MAAG;IAAC,CAAC,KAAG;MACnDoB,KAAK,CAACjB,OAAO,GAAG,KAAK;MACrB,IAAGC,KAAK,EAAC;QACLgB,KAAK,CAACjB,OAAO,GAAGC,KAAK;MACzB,CAAC,MAAI;QACDgB,KAAK,CAACpB,GAAG,GAAGA,GAAG;MACnB;IACJ,CAAC;IACD,CAACK,UAAU,CAAC2B,QAAQ,GAAG,CAACZ,KAAK,EAACC,MAAM,KAAG;MACnCD,KAAK,CAACjB,OAAO,GAAG,IAAI;IACxB;EACJ;AAEJ,CAAC,CAAC;AAEF,eAAea,SAAS,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}