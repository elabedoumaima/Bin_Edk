{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  msg: \"\",\n  user: \"\",\n  token: \"\",\n  loading: false,\n  error: null // Changed to null for better error handling\n};\nexport const signUpUser = createAsyncThunk(\"signupuser\", async body => {\n  try {\n    const res = await fetch(\"ddddddddddddddddddddd\", {\n      method: \"post\",\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n});\nexport const signInUser = createAsyncThunk(\"signinuser\", async body => {\n  try {\n    const res = await fetch(\"http://192.168.100.10:3000 \", {\n      method: \"post\",\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n});\nconst authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    addToken: state => {\n      state.token = localStorage.getItem(\"token\") || \"\";\n    },\n    addUser: state => {\n      state.user = localStorage.getItem(\"user\") || \"\";\n    },\n    logout: state => {\n      state.token = \"\";\n      state.user = \"\";\n      localStorage.clear();\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(signInUser.pending, state => {\n      state.loading = true;\n      state.error = null; // Reset error when starting async operation\n    }).addCase(signInUser.fulfilled, (state, action) => {\n      state.loading = false;\n      const {\n        error,\n        msg,\n        token,\n        user\n      } = action.payload;\n      if (error) {\n        state.error = error;\n      } else {\n        state.msg = msg;\n        state.token = token;\n        state.user = user;\n        localStorage.setItem('msg', msg);\n        localStorage.setItem('user', JSON.stringify(user));\n        localStorage.setItem('token', token);\n      }\n    }).addCase(signInUser.rejected, state => {\n      state.loading = false;\n      state.error = \"Sign-in failed\"; // Set specific error message for sign-in failure\n    }).addCase(signUpUser.pending, state => {\n      state.loading = true;\n      state.error = null; // Reset error when starting async operation\n    }).addCase(signUpUser.fulfilled, (state, action) => {\n      state.loading = false;\n      const {\n        error,\n        msg\n      } = action.payload;\n      if (error) {\n        state.error = error;\n      } else {\n        state.msg = msg;\n      }\n    }).addCase(signUpUser.rejected, state => {\n      state.loading = false;\n      state.error = \"Sign-up failed\"; // Set specific error message for sign-up failure\n    });\n  }\n});\nexport const {\n  addToken,\n  addUser,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","msg","user","token","loading","error","signUpUser","body","res","fetch","method","headers","JSON","stringify","data","json","signInUser","authSlice","name","reducers","addToken","state","localStorage","getItem","addUser","logout","clear","extraReducers","builder","addCase","pending","fulfilled","action","payload","setItem","rejected","actions","reducer"],"sources":["D:/bin_edk (hayat and oumaima)/client/src/redux/slice/autoSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    msg: \"\",\r\n    user: \"\",\r\n    token: \"\",\r\n    loading: false,\r\n    error: null // Changed to null for better error handling\r\n}\r\n\r\nexport const signUpUser = createAsyncThunk(\"signupuser\", async (body) => {\r\n    try {\r\n        const res = await fetch(\"ddddddddddddddddddddd\", {\r\n            method: \"post\",\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n        const data = await res.json();\r\n        return data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n});\r\n\r\nexport const signInUser = createAsyncThunk(\"signinuser\", async (body) => {\r\n    try {\r\n        const res = await fetch(\"http://192.168.100.10:3000 \", {\r\n            method: \"post\",\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n        const data = await res.json();\r\n        return data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n});\r\n\r\nconst authSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        addToken: (state) => {\r\n            state.token = localStorage.getItem(\"token\") || \"\";\r\n        },\r\n        addUser: (state) => {\r\n            state.user = localStorage.getItem(\"user\") || \"\";\r\n        },\r\n        logout: (state) => {\r\n            state.token = \"\";\r\n            state.user = \"\";\r\n            localStorage.clear();\r\n        }\r\n    },\r\n    extraReducers(builder) {\r\n        builder\r\n            .addCase(signInUser.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null; // Reset error when starting async operation\r\n            })\r\n            .addCase(signInUser.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                const { error, msg, token, user } = action.payload;\r\n                if (error) {\r\n                    state.error = error;\r\n                } else {\r\n                    state.msg = msg;\r\n                    state.token = token;\r\n                    state.user = user;\r\n\r\n                    localStorage.setItem('msg', msg);\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n                    localStorage.setItem('token', token);\r\n                }\r\n            })\r\n            .addCase(signInUser.rejected, (state) => {\r\n                state.loading = false;\r\n                state.error = \"Sign-in failed\"; // Set specific error message for sign-in failure\r\n            })\r\n            .addCase(signUpUser.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null; // Reset error when starting async operation\r\n            })\r\n            .addCase(signUpUser.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                const { error, msg } = action.payload;\r\n                if (error) {\r\n                    state.error = error;\r\n                } else {\r\n                    state.msg = msg;\r\n                }\r\n            })\r\n            .addCase(signUpUser.rejected, (state) => {\r\n                state.loading = false;\r\n                state.error = \"Sign-up failed\"; // Set specific error message for sign-up failure\r\n            });\r\n    }\r\n});\r\n\r\nexport const { addToken, addUser, logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}