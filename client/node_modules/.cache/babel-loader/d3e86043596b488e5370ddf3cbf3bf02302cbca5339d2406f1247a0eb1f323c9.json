{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  msg: \"\",\n  user: \"\",\n  loading: false,\n  error: \"\"\n};\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: state => {\n      state.user = null;\n    }\n  },\n  extraReducers: {\n    [signUpUser.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [signUpUser.pending]: (state, {\n      payload: {\n        error,\n        msg\n      }\n    }) => {\n      state.loading = false;\n      if (error) {\n        state.error = error;\n      } else {\n        state.msg = msg;\n      }\n    },\n    [signUpUser.pending]: (state, action) => {\n      state.loading = true;\n    }\n  }\n});\nexport const {\n  login,\n  logout\n} = userSlice.actions;\nexport const selectUser = state => state.user.user;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","msg","user","loading","error","userSlice","name","reducers","login","state","action","payload","logout","extraReducers","signUpUser","pending","actions","selectUser","reducer"],"sources":["D:/bin_edk (hayat and oumaima)/client/src/redux/UserSlice.jsx"],"sourcesContent":["import { createSlice ,createAsyncThunk} from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialState={\r\n    msg:\"\",\r\n    user:\"\",\r\n    loading:false,\r\n    error:\"\"\r\n}\r\nexport const userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState,\r\n    reducers: {\r\n        login: (state, action) => {\r\n            state.user = action.payload;\r\n        },\r\n        logout: (state) => {\r\n            state.user = null;\r\n        },\r\n    },\r\n    extraReducers:{\r\n        [signUpUser.pending]:(state,action)=>{\r\n            state.loading = true\r\n        },\r\n        [signUpUser.pending]:(state,{payload:{error,msg}})=>{\r\n            state.loading = false;\r\n            if(error){\r\n                state.error = error\r\n            }else{\r\n                state.msg = msg\r\n            }\r\n        },\r\n        [signUpUser.pending]:(state,action)=>{\r\n            state.loading = true\r\n        }\r\n    }\r\n});\r\n\r\nexport const { login, logout} = userSlice.actions;\r\nexport const selectUser = (state) => state.user.user;\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAO,kBAAkB;AAG/D,MAAMC,YAAY,GAAC;EACfC,GAAG,EAAC,EAAE;EACNC,IAAI,EAAC,EAAE;EACPC,OAAO,EAAC,KAAK;EACbC,KAAK,EAAC;AACV,CAAC;AACD,OAAO,MAAMC,SAAS,GAAGP,WAAW,CAAC;EACjCQ,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACNC,KAAK,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACtBD,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,MAAM,EAAGH,KAAK,IAAK;MACfA,KAAK,CAACP,IAAI,GAAG,IAAI;IACrB;EACJ,CAAC;EACDW,aAAa,EAAC;IACV,CAACC,UAAU,CAACC,OAAO,GAAE,CAACN,KAAK,EAACC,MAAM,KAAG;MACjCD,KAAK,CAACN,OAAO,GAAG,IAAI;IACxB,CAAC;IACD,CAACW,UAAU,CAACC,OAAO,GAAE,CAACN,KAAK,EAAC;MAACE,OAAO,EAAC;QAACP,KAAK;QAACH;MAAG;IAAC,CAAC,KAAG;MAChDQ,KAAK,CAACN,OAAO,GAAG,KAAK;MACrB,IAAGC,KAAK,EAAC;QACLK,KAAK,CAACL,KAAK,GAAGA,KAAK;MACvB,CAAC,MAAI;QACDK,KAAK,CAACR,GAAG,GAAGA,GAAG;MACnB;IACJ,CAAC;IACD,CAACa,UAAU,CAACC,OAAO,GAAE,CAACN,KAAK,EAACC,MAAM,KAAG;MACjCD,KAAK,CAACN,OAAO,GAAG,IAAI;IACxB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,KAAK;EAAEI;AAAM,CAAC,GAAGP,SAAS,CAACW,OAAO;AACjD,OAAO,MAAMC,UAAU,GAAIR,KAAK,IAAKA,KAAK,CAACP,IAAI,CAACA,IAAI;AACpD,eAAeG,SAAS,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}