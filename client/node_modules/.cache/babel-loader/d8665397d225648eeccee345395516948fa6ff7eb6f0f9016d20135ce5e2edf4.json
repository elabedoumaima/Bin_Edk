{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  msg: \"\",\n  user: \"\",\n  token: \"\",\n  loading: false,\n  error: \"\"\n};\nexport const signUpUser = createAsyncThunk(\"signupuser\", async () => {\n  try {\n    const res = await fetch(\"ddddddddddddddddddddd\", {\n      method: \"post\",\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    // Gérer les erreurs de la requête fetch ici\n    throw error;\n  }\n});\nexport const signInUser = createAsyncThunk(\"signinuser\", async () => {\n  try {\n    const res = await fetch(\"http://localhost:3000/\", {\n      method: \"post\",\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    // Gérer les erreurs de la requête fetch ici\n    throw error;\n  }\n});\nconst authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    addToken: (state, action) => {\n      state.token = localStorage.getItem(\"token\");\n    },\n    addUser: (state, action) => {\n      state.token = localStorage.getItem(\"user\");\n    },\n    logout: (state, action) => {\n      state.token = null;\n      localStorage.clear();\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(signInUser.pending, (state, action) => {\n      state.loading = true;\n    }).addCase(signInUser.fulfilled, (state, action) => {\n      state.loading = false;\n      const {\n        error,\n        msg,\n        token,\n        user\n      } = action.payload;\n      if (error) {\n        state.error = error;\n      } else {\n        state.msg = msg;\n        state.token = token;\n        state.user = user;\n        localStorage.setItem('msg', msg);\n        localStorage.setItem('user', JSON.stringify(user));\n        localStorage.setItem('token', token);\n      }\n    }).addCase(signInUser.rejected, (state, action) => {\n      state.loading = true;\n    }).addCase(signUpUser.pending, (state, action) => {\n      state.loading = true;\n    }).addCase(signUpUser.fulfilled, (state, action) => {\n      state.loading = false;\n      const {\n        error,\n        msg\n      } = action.payload;\n      if (error) {\n        state.loading = error;\n      } else {\n        state.msg = msg;\n      }\n    }).addCase(signUpUser.rejected, (state, action) => {\n      state.loading = true;\n    });\n  }\n});\nexport const {\n  addToken,\n  addUser,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","msg","user","token","loading","error","signUpUser","res","fetch","method","headers","body","JSON","stringify","data","json","signInUser","authSlice","name","reducers","addToken","state","action","localStorage","getItem","addUser","logout","clear","extraReducers","builder","addCase","pending","fulfilled","payload","setItem","rejected","actions","reducer"],"sources":["D:/bin_edk (hayat and oumaima)/client/src/redux/slice/autoSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    msg: \"\",\r\n    user: \"\",\r\n    token: \"\",\r\n    loading: false,\r\n    error: \"\"\r\n}\r\n\r\nexport const signUpUser = createAsyncThunk(\"signupuser\", async () => {\r\n    try {\r\n        const res = await fetch(\"ddddddddddddddddddddd\", {\r\n            method: \"post\",\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n        const data = await res.json();\r\n        return data;\r\n    } catch (error) {\r\n        // Gérer les erreurs de la requête fetch ici\r\n        throw error;\r\n    }\r\n});\r\n\r\nexport const signInUser = createAsyncThunk(\"signinuser\", async () => {\r\n    try {\r\n        const res = await fetch(\"http://localhost:3000/\", {\r\n            method: \"post\",\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n        const data = await res.json();\r\n        return data;\r\n    } catch (error) {\r\n        // Gérer les erreurs de la requête fetch ici\r\n        throw error;\r\n    }\r\n});\r\n\r\nconst authSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        addToken: (state, action) => {\r\n            state.token = localStorage.getItem(\"token\")\r\n        },\r\n        addUser: (state, action) => {\r\n            state.token = localStorage.getItem(\"user\")\r\n        },\r\n        logout: (state, action) => {\r\n            state.token = null;\r\n            localStorage.clear();\r\n        }\r\n    },\r\n    extraReducers(builder) {\r\n        builder\r\n            .addCase(signInUser.pending, (state, action) => {\r\n                state.loading = true\r\n            })\r\n            .addCase(signInUser.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                const { error, msg, token, user } = action.payload;\r\n                if (error) {\r\n                    state.error = error;\r\n                } else {\r\n                    state.msg = msg;\r\n                    state.token = token;\r\n                    state.user = user;\r\n\r\n                    localStorage.setItem('msg', msg)\r\n                    localStorage.setItem('user', JSON.stringify(user))\r\n                    localStorage.setItem('token', token)\r\n                }\r\n            })\r\n            .addCase(signInUser.rejected, (state, action) => {\r\n                state.loading = true\r\n            })\r\n            .addCase(signUpUser.pending, (state, action) => {\r\n                state.loading = true\r\n            })\r\n            .addCase(signUpUser.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                const { error, msg } = action.payload;\r\n                if (error) {\r\n                    state.loading = error\r\n                } else {\r\n                    state.msg = msg\r\n                }\r\n            })\r\n            .addCase(signUpUser.rejected, (state, action) => {\r\n                state.loading = true\r\n            });\r\n    }\r\n});\r\n\r\nexport const { addToken, addUser, logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}