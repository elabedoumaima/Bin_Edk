{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  msg: \"\",\n  user: \"\",\n  token: \"\",\n  loaging: false,\n  error: \"\"\n};\nexport const signUpUser = createAsyncThunk(\"signupuser\", async () => {\n  const res = await fetch(\"ddddddddddddddddddddd\", {\n    method: \"post\",\n    headers: {\n      'Content-Type': \"application/json\"\n    },\n    body: JSON.stringify(body)\n  });\n  return await res.json();\n});\nconst authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [signUpUser.pending]: (state, action) => {\n      state.loaging = true;\n    },\n    [signUpUser.fulfilled]: (state, {\n      payload: {\n        error,\n        msg\n      }\n    }) => {\n      state.loaging = false;\n      if (error) {\n        state.error = error;\n      } else {\n        state.msg = msg;\n      }\n    },\n    [signUpUser.rejected]: (state, action) => {\n      state.loaging = true;\n    }\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","msg","user","token","loaging","error","signUpUser","res","fetch","method","headers","body","JSON","stringify","json","authSlice","name","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","reducer"],"sources":["D:/bin_edk (hayat and oumaima)/client/src/redux/slice/autoSlice.js"],"sourcesContent":["import { createSlice,createAsyncThunk } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n    msg:\"\",\r\n    user:\"\",\r\n    token:\"\",\r\n    loaging:false,\r\n    error:\"\"\r\n}\r\n\r\nexport const signUpUser=createAsyncThunk(\"signupuser\",async()=>{\r\nconst res = await fetch(\"ddddddddddddddddddddd\",{\r\n    method:\"post\",\r\n    headers:{\r\n        'Content-Type':\"application/json\",\r\n    },\r\n    body:JSON.stringify(body)\r\n})\r\nreturn await res.json();\r\n})\r\nconst authSlice = createSlice({\r\n    name:'user',\r\n    initialState,\r\n    reducers:{\r\n\r\n    },\r\n    extraReducers:{\r\n       [signUpUser.pending]:(state,action)=>{\r\n        state.loaging = true\r\n       },\r\n       [signUpUser.fulfilled]:(state,{payload:{error,msg}})=>{\r\n        state.loaging = false;\r\n        if(error){\r\n            state.error = error\r\n        }else{\r\n            state.msg = msg\r\n        }\r\n       },\r\n       [signUpUser.rejected]:(state,action)=>{\r\n        state.loaging = true\r\n       }\r\n    }\r\n})\r\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAACC,gBAAgB,QAAQ,kBAAkB;AAC/D,MAAMC,YAAY,GAAG;EACjBC,GAAG,EAAC,EAAE;EACNC,IAAI,EAAC,EAAE;EACPC,KAAK,EAAC,EAAE;EACRC,OAAO,EAAC,KAAK;EACbC,KAAK,EAAC;AACV,CAAC;AAED,OAAO,MAAMC,UAAU,GAACP,gBAAgB,CAAC,YAAY,EAAC,YAAS;EAC/D,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,uBAAuB,EAAC;IAC5CC,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACF,IAAI;EAC5B,CAAC,CAAC;EACF,OAAO,MAAMJ,GAAG,CAACO,IAAI,CAAC,CAAC;AACvB,CAAC,CAAC;AACF,MAAMC,SAAS,GAAGjB,WAAW,CAAC;EAC1BkB,IAAI,EAAC,MAAM;EACXhB,YAAY;EACZiB,QAAQ,EAAC,CAET,CAAC;EACDC,aAAa,EAAC;IACX,CAACZ,UAAU,CAACa,OAAO,GAAE,CAACC,KAAK,EAACC,MAAM,KAAG;MACpCD,KAAK,CAAChB,OAAO,GAAG,IAAI;IACrB,CAAC;IACD,CAACE,UAAU,CAACgB,SAAS,GAAE,CAACF,KAAK,EAAC;MAACG,OAAO,EAAC;QAAClB,KAAK;QAACJ;MAAG;IAAC,CAAC,KAAG;MACrDmB,KAAK,CAAChB,OAAO,GAAG,KAAK;MACrB,IAAGC,KAAK,EAAC;QACLe,KAAK,CAACf,KAAK,GAAGA,KAAK;MACvB,CAAC,MAAI;QACDe,KAAK,CAACnB,GAAG,GAAGA,GAAG;MACnB;IACD,CAAC;IACD,CAACK,UAAU,CAACkB,QAAQ,GAAE,CAACJ,KAAK,EAACC,MAAM,KAAG;MACrCD,KAAK,CAAChB,OAAO,GAAG,IAAI;IACrB;EACH;AACJ,CAAC,CAAC;AACF,eAAeW,SAAS,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}