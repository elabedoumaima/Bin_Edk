{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  msg: \"\",\n  user: \"\",\n  token: \"\",\n  loading: false,\n  error: \"\"\n};\nexport const signUpUser = createAsyncThunk(\"signupuser\", async () => {\n  try {\n    const res = await fetch(\"ddddddddddddddddddddd\", {\n      method: \"post\",\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    // Gérer les erreurs de la requête fetch ici\n    throw error;\n  }\n});\nconst authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(signUpUser.pending, state => {\n      state.loading = true;\n    }).addCase(signUpUser.fulfilled, (state, action) => {\n      state.loading = false;\n      if (action.payload.error) {\n        state.error = action.payload.error;\n      } else {\n        state.msg = action.payload.msg;\n      }\n    }).addCase(signUpUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message; // Gérer les erreurs rejetées ici\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","msg","user","token","loading","error","signUpUser","res","fetch","method","headers","body","JSON","stringify","data","json","authSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["D:/bin_edk (hayat and oumaima)/client/src/redux/slice/autoSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    msg: \"\",\r\n    user: \"\",\r\n    token: \"\",\r\n    loading: false,\r\n    error: \"\"\r\n}\r\n\r\nexport const signUpUser = createAsyncThunk(\"signupuser\", async () => {\r\n    try {\r\n        const res = await fetch(\"ddddddddddddddddddddd\", {\r\n            method: \"post\",\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n        const data = await res.json();\r\n        return data;\r\n    } catch (error) {\r\n        // Gérer les erreurs de la requête fetch ici\r\n        throw error;\r\n    }\r\n});\r\n\r\nconst authSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(signUpUser.pending, (state) => {\r\n                state.loading = true;\r\n            })\r\n            .addCase(signUpUser.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                if (action.payload.error) {\r\n                    state.error = action.payload.error;\r\n                } else {\r\n                    state.msg = action.payload.msg;\r\n                }\r\n            })\r\n            .addCase(signUpUser.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.error.message; // Gérer les erreurs rejetées ici\r\n            });\r\n    }\r\n});\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,MAAMC,YAAY,GAAG;EACjBC,GAAG,EAAE,EAAE;EACPC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGP,gBAAgB,CAAC,YAAY,EAAE,YAAY;EACjE,IAAI;IACA,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,uBAAuB,EAAE;MAC7CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACF,IAAI;IAC7B,CAAC,CAAC;IACF,MAAMG,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAC7B,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOT,KAAK,EAAE;IACZ;IACA,MAAMA,KAAK;EACf;AACJ,CAAC,CAAC;AAEF,MAAMW,SAAS,GAAGlB,WAAW,CAAC;EAC1BmB,IAAI,EAAE,MAAM;EACZjB,YAAY;EACZkB,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACf,UAAU,CAACgB,OAAO,EAAGC,KAAK,IAAK;MACpCA,KAAK,CAACnB,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC,CACDiB,OAAO,CAACf,UAAU,CAACkB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9CF,KAAK,CAACnB,OAAO,GAAG,KAAK;MACrB,IAAIqB,MAAM,CAACC,OAAO,CAACrB,KAAK,EAAE;QACtBkB,KAAK,CAAClB,KAAK,GAAGoB,MAAM,CAACC,OAAO,CAACrB,KAAK;MACtC,CAAC,MAAM;QACHkB,KAAK,CAACtB,GAAG,GAAGwB,MAAM,CAACC,OAAO,CAACzB,GAAG;MAClC;IACJ,CAAC,CAAC,CACDoB,OAAO,CAACf,UAAU,CAACqB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACnB,OAAO,GAAG,KAAK;MACrBmB,KAAK,CAAClB,KAAK,GAAGoB,MAAM,CAACpB,KAAK,CAACuB,OAAO,CAAC,CAAC;IACxC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeZ,SAAS,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}